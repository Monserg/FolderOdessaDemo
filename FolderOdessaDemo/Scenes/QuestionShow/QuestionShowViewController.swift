//
//  QuestionShowViewController.swift
//  FolderOdessaDemo
//
//  Created by msm72 on 04.10.2017.
//  Copyright (c) 2017 RemoteJob. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  Folder paths:
//      /Users/msm72/Downloads
//      /Users/msm72/Library/Containers/ua.com.remotejob.FolderOdessaDemo

import Cocoa

// MARK: - Input & Output protocols
protocol QuestionShowDisplayLogic: class {
    func folderPresentLoad(fromViewModel viewModel: QuestionShowModels.Folder.ViewModel)
}

class QuestionShowViewController: NSViewController {
    // MARK: - Properties
    var interactor: QuestionShowBusinessLogic?
    var router: (NSObjectProtocol & QuestionShowRoutingLogic & QuestionShowDataPassing)?
    
    var handlerFindSuccessfullCompletion: (() -> ())?

    
    // MARK: - IBOutlets
    @IBOutlet weak var folderPathTextField: NSTextField!
    
    
    // MARK: - Object lifecycle
    override init(nibName nibNameOrNil: NSNib.Name?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        
        setup()
    }

    
    // MARK: - Setup
    private func setup() {
        let viewController          =   self
        let interactor              =   QuestionShowInteractor()
        let presenter               =   QuestionShowPresenter()
        let router                  =   QuestionShowRouter()
        
        viewController.interactor   =   interactor
        viewController.router       =   router
        interactor.presenter        =   presenter
        presenter.viewController    =   viewController
        router.viewController       =   viewController
        router.dataStore            =   interactor
    }
    
    
    // MARK: - Routing
    override func prepare(for segue: NSStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    deinit {
        print("QuestionShowVC deinit.")
    }
    

    // MARK: - Custom Functions
    private func viewSettingsDidLoad() {
        if folderPathTextField.stringValue.isEmpty {
            alertViewShow()
        } else {
            let requestModel = QuestionShowModels.Folder.RequestModel(path: folderPathTextField.stringValue)
            interactor?.folderLoad(withRequestModel: requestModel)
        }
    }
    
    
    // MARK: - Actions
    @IBAction func handlerFindButtonPress(_ sender: NSButton) {
        viewSettingsDidLoad()
    }
    
    @IBAction func handlerCancelButtonPress(_ sender: NSButton) {
        dismissViewController(self)
    }
}


// MARK: - QuestionShowDisplayLogic
extension QuestionShowViewController: QuestionShowDisplayLogic {
    func folderPresentLoad(fromViewModel viewModel: QuestionShowModels.Folder.ViewModel) {
        if viewModel.isFolderExists {
            router?.routeToFolderShowScene()
        } else {
            alertViewShow()
        }
    }
}
