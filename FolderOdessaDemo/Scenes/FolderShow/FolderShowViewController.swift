//
//  FolderShowViewController.swift
//  FolderOdessaDemo
//
//  Created by msm72 on 04.10.2017.
//  Copyright (c) 2017 RemoteJob. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Cocoa

// MARK: - Input & Output protocols
protocol FolderShowDisplayLogic: class {
    func displaySomething(viewModel: FolderShowModels.Something.ViewModel)
}

class FolderShowViewController: NSViewController {
    // MARK: - Properties
    var interactor: FolderShowBusinessLogic?
    var router: (NSObjectProtocol & FolderShowRoutingLogic & FolderShowDataPassing)?
    
        
    // MARK: - Object lifecycle
    override init(nibName nibNameOrNil: NSNib.Name?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)

        setup()
    }
    
    
    // MARK: - Setup
    private func setup() {
        let viewController          =   self
        let interactor              =   FolderShowInteractor()
        let presenter               =   FolderShowPresenter()
        let router                  =   FolderShowRouter()
        
        viewController.interactor   =   interactor
        viewController.router       =   router
        interactor.presenter        =   presenter
        presenter.viewController    =   viewController
        router.viewController       =   viewController
        router.dataStore            =   interactor
    }
    
    
    // MARK: - Routing
    override func prepare(for segue: NSStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        viewSettingsDidLoad()
    }
    
    override func viewDidAppear() {
        super.viewDidAppear()
        
        questionViewDidLoad()
    }
    
    
    // MARK: - Custom Functions
    func viewSettingsDidLoad() {
        let requestModel = FolderShowModels.Something.RequestModel()
        interactor?.doSomething(request: requestModel)        
    }
    
    func alertUser() {
        let alert = NSAlert()
        alert.alertStyle = .informational
        alert.messageText = NSLocalizedString("Info", comment: "Info title message")
        alert.informativeText = NSLocalizedString("Please enter any folder name", comment: "Alert informative text")
        alert.addButton(withTitle: NSLocalizedString("Find", comment: "Find alert action button"))
        alert.addButton(withTitle: NSLocalizedString("Cancel", comment: "Cancel alert action button"))

        alert.beginSheetModal(for: self.view.window!) { (returnCode) in
            print ("returnCode: ", returnCode)
        }
    }
    
    func questionViewDidLoad() {
        let questionShowVC = NSStoryboard(name: NSStoryboard.Name(rawValue: "QuestionShow"), bundle: nil).instantiateController(withIdentifier: NSStoryboard.SceneIdentifier(rawValue: "QuestionShowVC")) as! QuestionShowViewController
        presentViewControllerAsModalWindow(questionShowVC)
    }
}


// MARK: - FolderShowDisplayLogic
extension FolderShowViewController: FolderShowDisplayLogic {
    func displaySomething(viewModel: FolderShowModels.Something.ViewModel) {
    }
}
